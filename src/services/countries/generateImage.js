// src/services/countries/generateImage.js
import { createCanvas } from "canvas";
import fs from "fs";
import path from "path";
import pool from "../../db.js";
import { mkdirp } from "mkdirp";

const CACHE_DIR = path.join(process.cwd(), "cache");
const SUMMARY_IMAGE_PATH = path.join(CACHE_DIR, "summary.png");
mkdirp.sync(CACHE_DIR);

export async function generateSummaryImage(lastRefreshedAt) {
  const connection = await pool.getConnection();
  try {
    // ✅ Get total count
    const [totalRes] = await connection.query(`SELECT COUNT(*) AS cnt FROM countries`);
    const total = totalRes[0].cnt || 0;

    // ✅ Get top 5 countries by GDP
    const [topRes] = await connection.query(`
      SELECT name, estimated_gdp
      FROM countries
      ORDER BY estimated_gdp DESC
      LIMIT 5
    `);
    const top = topRes;

    // ✅ Generate summary image
    const width = 1200;
    const height = 630;
    const canvas = createCanvas(width, height);
    const ctx = canvas.getContext("2d");

    ctx.fillStyle = "#fff";
    ctx.fillRect(0, 0, width, height);

    ctx.fillStyle = "#111";
    ctx.font = "bold 36px Sans";
    ctx.fillText("Countries Refresh Summary", 40, 60);

    ctx.font = "20px Sans";
    ctx.fillText(`Last refreshed: ${new Date(lastRefreshedAt).toISOString()}`, 40, 100);
    ctx.fillText(`Total countries: ${total}`, 40, 130);

    ctx.font = "24px Sans";
    ctx.fillText("Top 5 countries by Estimated GDP:", 40, 180);

    ctx.font = "20px Sans";
    let y = 220;
    for (let i = 0; i < top.length; i++) {
      const row = top[i];
      const gdpDisplay = row.estimated_gdp
        ? Number(row.estimated_gdp).toLocaleString(undefined, { maximumFractionDigits: 2 })
        : "0";
      ctx.fillText(`${i + 1}. ${row.name} — ${gdpDisplay}`, 60, y);
      y += 36;
    }

    ctx.font = "16px Sans";
    ctx.fillStyle = "#666";
    ctx.fillText("Generated by /countries/refresh", 40, height - 40);

    const buffer = canvas.toBuffer("image/png");
    fs.writeFileSync(SUMMARY_IMAGE_PATH, buffer);
  } finally {
    connection.release();
  }
}

export { SUMMARY_IMAGE_PATH };
